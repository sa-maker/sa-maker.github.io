{"version":3,"sources":["components/TabButton.js","components/AlphabetTabs.js","components/ContactOpen.js","components/ContactDetail.js","components/ContactTables.js","utils/dataHelpers.js","pages/ContactList.js","index.js"],"names":["TabButton","selected","ret_val","this","props","value","length","setSelected","disabled","className","getButtonClass","onClick","React","Component","AlphabetTabs","contacts","Object","entries","map","t","k","bind","ContactOpen","contact","setOpenCard","src","picture","large","alt","name","last","toUpperCase","first","cellPadding","cellmargin","email","cell","location","street","number","city","state","postcode","login","username","ContactDetail","openCard","openBlock","ContactTables","selectedContacts","tabeliseList","objList","tabs","ret_dict","key_array","buildArrayDict","element","key","toLowerCase","charAt","push","ContactList","contactList","axios","get","userUrl","numberCards","then","res","data","results","setState","document","title","getData","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.877173c7.chunk.js","sourcesContent":["import React from 'react';\nimport './TabButton.css';\n\nclass TabButton extends React.Component{\n\n  getButtonClass(selected){\n    let ret_val = \"tabButton \" \n    if(selected){\n      ret_val += \"selected \"\n    }\n    return ret_val\n  }\n\n  render() {\n    const {value, length, selected, setSelected } = this.props\n    \n    \n    return (\n      <button \n        disabled={length === 0} \n        className={this.getButtonClass(selected)} \n        onClick={() => setSelected(value)  }\n      >\n          <span className=\"buttonValue\">{value}</span>\n          <span className=\"buttonLength\">{length}</span>\n      </button>    \n      )\n  }\n}\n\nexport default TabButton;\n","import React from 'react';\nimport TabButton from '../components/TabButton'\nimport './AlphabetTabs.css';\n\nclass AlphabetTabs extends React.Component{\n\n  render() {\n    const {contacts, selected, setSelected} = this.props\n    return (\n      <div className=\"tabContainer\">\n        { Object.entries(contacts).map((t,k) => \n          <TabButton \n            value={t[0]} \n            length={t[1].length} \n            selected={selected===t[0]}\n            setSelected={setSelected.bind(this) }\n            key={k}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default AlphabetTabs;\n","import React from 'react'\r\nimport './ContactOpen.css'\r\n\r\nclass ContactOpen extends React.Component{\r\n  render() {\r\n    const {contact, setOpenCard} = this.props\r\n    \r\n    return (\r\n      <div className=\"openContactContainer\">\r\n        <div onClick={()=>setOpenCard('')} className=\"openContactClose\" >X</div>\r\n        <div className=\"leftContainer\">\r\n          <img src={contact.picture.large} alt=\"Contact profile\" className=\"avatar\" />\r\n        </div>\r\n        <div className=\"rightContainer\">  \r\n          <span className=\"openContactName\">  \r\n            {contact.name.last.toUpperCase()}, {contact.name.first}  \r\n          </span>\r\n          <table className=\"openContactDetails\" cellPadding='0px' cellmargin='0px'>\r\n            <tbody>\r\n            <tr>\r\n              <th>e-mail</th>\r\n              <td>{contact.email}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>phone</th>\r\n              <td>{contact.cell}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>street</th>\r\n              <td>{contact.location.street.number} {contact.location.street.name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>city</th>\r\n              <td>{contact.location.city}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>state</th>\r\n              <td>{contact.location.state}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>postcode</th>\r\n              <td>{contact.location.postcode}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"contactUsername\">\r\n            USERNAME {contact.login.username}\r\n        </div>\r\n      </div>\r\n    )      \r\n  }\r\n}\r\n\r\nexport default ContactOpen","import React from 'react'\r\nimport ContactOpen from '../components/ContactOpen'\r\nimport './ContactDetail.css'\r\n\r\nclass ContactDetail extends React.Component{\r\n  \r\n    render() {\r\n      const {contact, openCard, setOpenCard} = this.props\r\n\r\n      let openBlock = ''\r\n      if(openCard === contact.login.username){\r\n        openBlock = <ContactOpen \r\n          className=\"contactOpenContainer\" \r\n          setOpenCard={setOpenCard.bind(this)}\r\n          contact={contact}  \r\n          />\r\n      }\r\n\r\n      return (\r\n        <div className=\"contactContainer\" >\r\n          <span onClick={()=>setOpenCard(contact.login.username)} className=\"contactContainerLink\">{contact.name.first}, {contact.name.last.toUpperCase()} </span>\r\n          {openBlock}\r\n          \r\n        </div>\r\n      )      \r\n    }\r\n  }\r\n  \r\n  export default ContactDetail","import React from 'react'\r\nimport ContactDetail from '../components/ContactDetail'\r\nimport './ContactTables.css'\r\n\r\nclass ContactTables extends React.Component{\r\n\r\n  render() {\r\n    const {contacts, selected, openCard, setOpenCard} = this.props\r\n    let selectedContacts = []\r\n    if(typeof contacts[selected] !== 'undefined'){\r\n      selectedContacts = contacts[selected]\r\n    }\r\n\r\n    return (\r\n      <div className=\"tablesContainer\">\r\n        <div className=\"centerContainer\">\r\n        { selectedContacts.map((contact, k) => \r\n          <ContactDetail \r\n            contact={contact} \r\n            openCard={openCard}\r\n            setOpenCard={setOpenCard.bind(this)}\r\n            key={k}\r\n          />\r\n        )}\r\n        </div>\r\n      </div>\r\n    )      \r\n  }\r\n}\r\n\r\nexport default ContactTables","export function buildArrayDict(key_array){\r\n  let ret_dict = {}\r\n  for(var key of key_array){\r\n    ret_dict[key] = []\r\n  }\r\n  return ret_dict\r\n}\r\n\r\nexport function tabeliseList(objList, tabs) {\r\n  // this makes a dictionary of a contact list according to the list of tabs and the first letter of the contacts last name\r\n  // if the first letter of the last name is not in the tab list it will be ignored\r\n  const ret_dict = buildArrayDict(tabs) \r\n  for(var element of objList){\r\n    if(typeof element.name.last !== 'undefined') {\r\n      let key = element.name.last.toLowerCase().charAt(0)\r\n      if(typeof ret_dict[key] !=='undefined'){ \r\n        ret_dict[key].push(element)\r\n      }\r\n    }\r\n  }\r\n  return ret_dict\r\n}","import React from 'react';\nimport AlphabetTabs from '../components/AlphabetTabs'\nimport ContactTables from '../components/ContactTables'\nimport {tabeliseList} from '../utils/dataHelpers'\nimport './ContactList.css';\nimport axios from 'axios'\nimport {title, userUrl, numberCards, tabs } from './contactListConfig.json'\n\nclass ContactList extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      contactList: {},\n      selected: 'a',\n      openCard: ''\n    }\n\n    this.setSelected = this.setSelected.bind(this)\n    this.setOpenCard = this.setOpenCard.bind(this)\n  }\n\n  getData(){\n    axios.get(userUrl+'?results='+numberCards+'&nat=nl,us,dk,fr,gb').then(res => {\n      var data = tabeliseList(res.data.results, tabs)\n      this.setState({contactList : data})\n    })\n  }\n\n  componentDidMount(){\n    document.title = title\n    this.setSelected(tabs[0])\n    this.getData()\n  }\n\n  setSelected(value){\n    this.setState({selected:value})\n  }\n\n  setOpenCard(value){\n    this.setState({openCard:value})\n  }\n\n  render(){\n    const { contactList, selected, openCard } = this.state\n    \n    return (\n      <div className=\"contactListContainer\"> \n        <AlphabetTabs \n          contacts={contactList} \n          selected={selected} \n          setSelected={this.setSelected.bind(this) }\n          />\n        <ContactTables\n          contacts={contactList} \n          selected={selected} \n          openCard={openCard} \n          setOpenCard={this.setOpenCard.bind(this) }\n          />  \n      </div>\n    )\n  }\n}\n\nexport default ContactList\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ContactList from './pages/ContactList';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContactList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}